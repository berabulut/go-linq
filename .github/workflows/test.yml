# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
  push:
    branches: 
     - master

env:
  GO111MODULE: on

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.11', tip]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Install Go
      if: matrix.go != 'tip'
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Install Go
      if: matrix.go == 'tip'
      run: |
        export GOROOT_BOOTSTRAP=`go env GOROOT`
        export GOROOT_FINAL=/go
        export GOROOT=$HOME/gotip
        mkdir $HOME/gotip
        cd $HOME/gotip

        curl -s 'https://go.googlesource.com/go/+/refs/heads/master?format=JSON' | awk '/"commit"/{print substr($2,2,40);exit}' >HEAD
        awk '{printf("gotip-%s",substr($0,0,7))}' <HEAD >VERSION

        curl -s -o go.tar.gz https://go.googlesource.com/go/+archive/`cat HEAD`.tar.gz
        tar xfz go.tar.gz

        cd src
        bash make.bash

        echo "::set-env name=GOROOT::$GOROOT"
        echo "::add-path::$GOROOT/bin"
    
    - name: Test
      run: |
        go version
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go install github.com/bradleyfalzon/apicompat/cmd/apicompat
        go install golang.org/x/lint/golint

    - name: Run vet 
      run: go vet -x ./...

    
    - name: Lint
      run: test -z "$(golint ./...)" -e

    - name: Format code
      run: test -z "$(gofmt -s -l -w . | tee /dev/stderr)" -e
    
    - name: Run tests
      run: |
        go test -v  ./...
        go test -covermode=count -coverprofile=profile.cov

    - name: Backward compability
      run: test -z "$(apicompat -before ${{ github.event.before }} -after ${{ github.event.after}} ./... | tee /dev/stderr)" -e
      
    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: profile.cov
            
    

